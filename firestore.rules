rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check admin role
    function isUserAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/user_roles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check staff role
    function isUserStaff() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/user_roles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'staff';
    }

    // Rules for user_roles collection
    match /user_roles/{userId} {
      // Allow authenticated users to read their own role
      allow read: if isAuthenticated() && request.auth.uid == userId;
      // Allow admins to read/write any role
      allow read, write: if isUserAdmin();
    }

    // Rules for inventory collection
    match /inventory/{document} {
      allow read: if isUserAdmin() || isUserStaff(); // Admins and staff can read
      allow write: if isUserAdmin(); // Only admins can write
    }

    // Rules for suppliers collection (working as per logs)
    match /suppliers/{document} {
      allow read: if isUserAdmin() || isUserStaff();
      allow write: if isUserAdmin();
    }

    // Rules for locations collection (working as per logs)
    match /locations/{document} {
      allow read: if isUserAdmin() || isUserStaff();
      allow write: if isUserAdmin();
    }

    // Rules for orders collection
    match /orders/{orderId} {
      allow read: if isUserAdmin() || isUserStaff(); // Admins and staff can read
      allow write: if isUserAdmin(); // Only admins can create, update, delete
    }
  }
}
